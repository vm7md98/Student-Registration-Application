package GUI;

import Exception.ExceptionService;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.JTable;
import Model.*;
import JDBC.*;
import GUI.Login;
import Sing.User;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

public class AdminPage extends javax.swing.JFrame {

    public AdminPage() {
        initComponents();
        User user = User.getInstance();
        try {
            if (user.getId() == null) {
                throw new ExceptionService("Something wrong", "Exit...");
            } else {
                jLabel7.setText(user.getId());
            }
        } catch (ExceptionService e) {
            String error = e.toString();
            String error2 = e.toString2();
            JOptionPane.showMessageDialog(this, error);
            JOptionPane.showMessageDialog(this, error2);
            System.exit(0);

        }
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("uncheckd")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jTableShow = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        LbUserName = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxMajor = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldSemester = new javax.swing.JTextField();
        jButtonDelete = new javax.swing.JButton();
        jButtonUpdate = new javax.swing.JButton();
        jButtonAdd = new javax.swing.JButton();
        jButtonFindByID = new javax.swing.JButton();
        jLabelInfo = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldType = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldPhone = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldIPassword = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTableShow.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6"
            }
        ));
        jScrollPane3.setViewportView(jTableShow);

        jButton1.setText("Show All Student");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Logout");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setText("User ID:");

        jTextFieldID.setToolTipText("Book ID");
        jTextFieldID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldIDActionPerformed(evt);
            }
        });

        jLabel3.setText("Major:");

        jComboBoxMajor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "IT", "Engineer", "Business" }));
        jComboBoxMajor.setSelectedIndex(-1);
        jComboBoxMajor.setToolTipText("Category of book");
        jComboBoxMajor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxMajorActionPerformed(evt);
            }
        });

        jLabel4.setText("Name:");

        jTextFieldName.setToolTipText("Title of book");

        jLabel5.setText("Semester:");

        jTextFieldSemester.setToolTipText("price of book");
        jTextFieldSemester.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSemesterActionPerformed(evt);
            }
        });

        jButtonDelete.setText("Delete");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jButtonUpdate.setText("Update");
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });

        jButtonAdd.setText("ADD");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jButtonFindByID.setText("Find By ID");
        jButtonFindByID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFindByIDActionPerformed(evt);
            }
        });

        jLabelInfo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelInfo.setForeground(java.awt.Color.red);

        jLabel1.setText("Type:");

        jTextFieldType.setToolTipText("price of book");
        jTextFieldType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTypeActionPerformed(evt);
            }
        });

        jLabel6.setText("Phone");

        jTextFieldPhone.setToolTipText("Book ID");
        jTextFieldPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPhoneActionPerformed(evt);
            }
        });

        jLabel7.setText("jLabel7");

        jLabel8.setText("Password");

        jTextFieldIPassword.setToolTipText("Book ID");
        jTextFieldIPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldIPasswordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(jTextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LbUserName)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(65, 65, 65)
                                .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addComponent(jComboBoxMajor, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5))
                                .addGap(51, 51, 51)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldSemester, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldType, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addComponent(jTextFieldPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(jTextFieldIPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonUpdate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButtonAdd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButtonFindByID, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButtonDelete, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(22, 22, 22))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addGap(71, 71, 71)
                        .addComponent(jButton2)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 580, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2)
                            .addComponent(LbUserName)
                            .addComponent(jLabel7))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(jLabel6))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(jButtonFindByID)
                                .addGap(25, 25, 25)
                                .addComponent(jButtonAdd)
                                .addGap(25, 25, 25)
                                .addComponent(jButtonUpdate)
                                .addGap(25, 25, 25)
                                .addComponent(jButtonDelete)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(2, 2, 2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextFieldIPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTextFieldPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBoxMajor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldSemester, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTextFieldType, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)))
                .addComponent(jLabelInfo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        UserDAO usrDAO = new UserDAO();

        Data<Student> studentList = null;

        try {
            studentList = usrDAO.getAllStudents();
        } catch (SQLException sqlex) {
            jLabel1.setText("Database error!" + sqlex.getMessage());
        }

        //convert the studentList and data in it to a vector of vectors
        Vector rowDataVector = new Vector();
        Vector columnDataVector = null;

        for (int i = 0; i < studentList.countItems(); i++) {

            columnDataVector = new Vector();
            columnDataVector.add(studentList.get(i).getId());
            columnDataVector.add(studentList.get(i).getPassword());
            columnDataVector.add(studentList.get(i).getName());
            columnDataVector.add(studentList.get(i).getPhone());
            columnDataVector.add(studentList.get(i).getMajor());
            columnDataVector.add(studentList.get(i).getSemester());
            columnDataVector.add(studentList.get(i).getType());

            //add this column data vector to the rowDataVector
            rowDataVector.add(columnDataVector);
        }

        //create a vector for column names
        Vector columnNamesVector = new Vector();
        columnNamesVector.add("StudentID");
        columnNamesVector.add("Password");
        columnNamesVector.add("Name");
        columnNamesVector.add("Phone");
        columnNamesVector.add("Major");
        columnNamesVector.add("Semester");
        columnNamesVector.add("Type");

        //init the JTable instance using the row data and column data vectors
        jTableShow = new JTable(rowDataVector, columnNamesVector);
        jScrollPane3.setViewportView(jTableShow);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Login login = new Login();

        login.setVisible(true);
        this.setVisible(false);    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextFieldIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldIDActionPerformed

    private void jComboBoxMajorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxMajorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxMajorActionPerformed

    private void jTextFieldSemesterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSemesterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldSemesterActionPerformed

    //Delete User
    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        // TODO add your handling code here:

        UserDAO userDAO = new UserDAO();
        int deleteStatus = 0;

        try {
            //check if user Id is empty
            if (jTextFieldID.getText().isEmpty()) {
                //show a message in the lable
                throw new ExceptionService("Enter a User ID!!");
            }

            //get entered value from ID text field using its getText() method
            String userID = (jTextFieldID.getText().trim());

            //if user object returned is null - userID does not exist
            if (userDAO.findStudentByID(userID) == null) {
                throw new ExceptionService("User ID: " + userID + " not found!");
            }

            deleteStatus = userDAO.deleteUser(userID);

            if (deleteStatus == 1) {
                jLabelInfo.setText(userID + " record deleted!");
            } else {
                jLabelInfo.setText("Error deleting " + userID + " record!");
            }

        } catch (ExceptionService e) {
            jLabelInfo.setText(e.getMessage());
        } catch (SQLException sqlex) {
            jLabelInfo.setText("DBError:" + sqlex.getMessage());
        }
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    //Update User
    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed
        String id = jTextFieldID.getText();
        String password = jTextFieldIPassword.getText();
        String phone = jTextFieldPhone.getText();
        String major = jComboBoxMajor.getSelectedItem().toString();
        String Name = jTextFieldName.getText();
        String Semester = jTextFieldSemester.getText();
        String Type = jTextFieldType.getText();

        Integer phoneNum = Integer.valueOf(phone);
        Integer semesterNum = Integer.valueOf(Semester);

        UserDAO user = new UserDAO();
        int updateStatus = -1;
        try {
            updateStatus = user.updateUser(id, password, phoneNum, major, Name, semesterNum, Type);
            if (updateStatus == 1) {
                JOptionPane.showMessageDialog(this, id + " " + Name + " updated successfully");

            } else {
                JOptionPane.showMessageDialog(this, id + " " + Name + "  Error updating ");

            }
        } catch (SQLException ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jButtonUpdateActionPerformed

    //Add User
    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed

        String id = jTextFieldID.getText();
        String password = jTextFieldIPassword.getText();
        String phone = jTextFieldPhone.getText();
        String major = jComboBoxMajor.getSelectedItem().toString();
        String Name = jTextFieldName.getText();
        String Semester = jTextFieldSemester.getText();
        String Type = jTextFieldType.getText();

        Integer phoneNum = Integer.valueOf(phone);
        Integer semesterNum = Integer.valueOf(Semester);

        UserDAO user = new UserDAO();

        try {

            int addStatus = -1;

            if (user.findStudentByID(id) != null) {
                throw new ExceptionService("User ID " + id + " already exists!");
            }
            addStatus = user.addNewStudent(id, password, phoneNum, major, Name, semesterNum, Type);
            if (addStatus == 1) {
                JOptionPane.showMessageDialog(this, id + " " + Name + " inserted successfully");
            } else {
                JOptionPane.showMessageDialog(this, id + " " + Name + "  Error Inserting");
            }
        } catch (SQLException ex) {
            Logger.getLogger(AdminPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ExceptionService e) {
            JOptionPane.showMessageDialog(this, "Already exists");
        }


    }//GEN-LAST:event_jButtonAddActionPerformed

    //Find User
    private void jButtonFindByIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFindByIDActionPerformed
        // TODO add your handling code here:
        String stuID = jTextFieldID.getText();
        UserDAO userDAO = new UserDAO();
        try {
            Student student = userDAO.findStudentByID(stuID);
            if (student == null) {
                throw new ExceptionService("Not find");
            } else {
                //Get name
                jTextFieldName.setText(student.getName());
                //name to string
                String semester = String.valueOf(student.getSemester());
                jTextFieldSemester.setText(semester);
                //get type
                jTextFieldType.setText(student.getType());

                if (student.getMajor().equals("IT")) {
                    jComboBoxMajor.setSelectedIndex(0);
                } else if (student.getMajor().equals("Engineer")) {
                    jComboBoxMajor.setSelectedIndex(1);
                } else if (student.getMajor().equals("Business")) {
                    jComboBoxMajor.setSelectedIndex(2);
                }

                String phoneNum = String.valueOf(student.getPhone());
                jTextFieldPhone.setText(phoneNum);

                jTextFieldIPassword.setText(student.getPassword());
            }
        } catch (ExceptionService error) {
            jLabelInfo.setText(error.toString());

        } catch (SQLException e) {
            jLabelInfo.setText(e.toString());
        }


    }//GEN-LAST:event_jButtonFindByIDActionPerformed

    private void jTextFieldTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTypeActionPerformed

    private void jTextFieldPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPhoneActionPerformed

    private void jTextFieldIPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldIPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldIPasswordActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LbUserName;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonFindByID;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JComboBox<String> jComboBoxMajor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelInfo;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTableShow;
    private javax.swing.JTextField jTextFieldID;
    private javax.swing.JTextField jTextFieldIPassword;
    private javax.swing.JTextField jTextFieldName;
    private javax.swing.JTextField jTextFieldPhone;
    private javax.swing.JTextField jTextFieldSemester;
    private javax.swing.JTextField jTextFieldType;
    // End of variables declaration//GEN-END:variables
}
